{"version":3,"sources":["components/bottominfo/BottomInfo.js","components/terminal/TerminalStatusBar.js","utils/messageprotocol.js","hooks/useFocus.js","utils/terminalfilesystem/filesystem.js","components/terminal/TerminalMainScreen.js","utils/fontsize.js","components/terminal/Terminal.js","App.js","index.js"],"names":["BottomInfo","BottomDrop","styled","div","Details","h1","SubDetails","p","TerminalStatusBar","WindowBar","ControlContainer","Control","props","maximize","css","minimize","cancel","messageSeparator","terminalPrompt","TYPE_SYSTEM_TEXT","TYPE_WITH_PROMPT_TEXT","PromptText","span","prettierHistory","history","map","line","split","array","includes","processBold","Bold","b","text","words","splitText","i","length","push","files","skills","content","processCommand","command","file","splitCommand","Object","keys","join","functionHelpMap","cmd","usage","help","ls","cat","helpMessage","getMaxLengths","maxHelpTotalLength","maxKeyLength","maxUsageLength","maxHelpLength","horizontalBar","repeat","key","appendWhiteSpace","str","totalLength","result","Math","max","TerminalMainScreen","useState","setHistory","inputRef","useRef","current","focus","useFocus","ref","setFocus","useEffect","WindowContent","TerminalInput","onClick","onKeyDown","e","textContent","submittedLine","systemReturns","newHistory","preventDefault","contentEditable","Terminal","Window","App","Background","Centered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5da64d71.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport default function BottomInfo() {\n\tconst BottomDrop = styled.div`\n      //  set document as parent\n      position: absolute;\n      bottom: 20px;\n      width: 100%;\n      text-align: center;\n\t`\n\tconst Details = styled.h1`\n      color: #fff;\n      font-weight: normal;\n      font-size: 16px;\n\t`\n\n\tconst SubDetails = styled.p`\n      color: aliceblue;\n\t  font-size: 14px;\n\n\t`\n\treturn (\n\t\t<BottomDrop>\n\t\t\t<Details>\n\t\t\t\t© Hajin Kim\n\t\t\t</Details>\n\t\t\t<SubDetails>\n\t\t\t\tMade with ❤, Dell UltraSharp 27\", Kensington Orbit, Mac Mini M1, Microsoft Ergonomic Keyboard, and a bit of music in the background\n\t\t\t</SubDetails>\n\t\t</BottomDrop>\n\t)\n}","import styled, {css} from \"styled-components\";\n\nexport default function TerminalStatusBar(){\n\tconst WindowBar = styled.div`\n      width: 100%;\n      height: 30px;\n      background-color: aliceblue;\n      display: flex;\n      justify-content: flex-start;\n      border-top-left-radius: 10px;\n\t  border-top-right-radius: 10px;\n\t`\n\n\tconst ControlContainer = styled.div`\n      height: 100%;\n      display: flex;\n      align-items: center;\n      margin-left: 10px;\n\t`\n\tconst Control = styled.div`\n      height: 12px;\n      width: 12px;\n      border-radius: 8px;\n\t  margin-right: 5px;\n      ${props => props.maximize && css`\n        background-color: green;\n      `}\n      ${props => props.minimize && css`\n\t\t  background-color: orange;\n      `}\n      ${props => props.cancel && css`\n\t\t  background-color: crimson;\n      `}\n\t`\n\n\treturn(\n\t\t<WindowBar>\n\t\t\t<ControlContainer>\n\t\t\t\t<Control cancel />\n\t\t\t\t<Control minimize/>\n\t\t\t\t<Control maximize/>\n\t\t\t</ControlContainer>\n\t\t</WindowBar>\n\t)\n}","// this distinguishes between different message types\n// eg `anonymous@hajinkim >` should be displayed differently to other texts\n// this protocol allows you to easily distinguish those\n\n// format of message is: \"<PROTOCOL><messageSeparator><MESSAGE>\"\nexport const messageSeparator = \"//\"\n\nexport const TYPE_INDEX = 0\nexport const CONTENT_INDEX = 1\n\nexport const terminalPrompt = \"anonymous@hajinkim >\"\n\nexport const TYPE_SYSTEM_TEXT = \"System Returns\"\nexport const TYPE_WITH_PROMPT_TEXT = \"User Inputs\"\n\n\n\n\n\n","import {\n  CONTENT_INDEX,\n  messageSeparator,\n  terminalPrompt,\n  TYPE_INDEX,\n  TYPE_SYSTEM_TEXT,\n  TYPE_WITH_PROMPT_TEXT,\n} from \"../utils/messageprotocol\";\nimport { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nexport const PromptText = styled.span`\n  font-weight: bolder;\n  color: navajowhite;\n  margin-right: 5px;\n`;\n\nexport const useFocus = () => {\n  const inputRef = useRef();\n  const focusInput = () => {\n    inputRef.current.focus();\n  };\n\n  return [inputRef, focusInput];\n};\n\nexport const prettierHistory = (history) => {\n  return history\n    .map((line) => line.split(messageSeparator))\n    .map((array) => {\n      if (array[TYPE_INDEX].includes(TYPE_WITH_PROMPT_TEXT)) {\n        return (\n          <>\n            <PromptText>{terminalPrompt}</PromptText>\n            {array[CONTENT_INDEX]}\n          </>\n        );\n      }\n      if (array[TYPE_INDEX].includes(TYPE_SYSTEM_TEXT)) {\n        return processBold(array[CONTENT_INDEX]);\n      }\n\n      return <></>;\n    });\n};\n\nconst Bold = styled.b`\n  background: ;\n  color: white;\n`;\n\nconst processBold = (text) => {\n  var words = [];\n  const splitText = text.split(\"**\");\n\n  for (var i = 0; i < splitText.length; i++) {\n    if (i % 2 !== 0) {\n      words.push(<Bold>{splitText[i]}</Bold>);\n    } else {\n      words.push(splitText[i]);\n    }\n  }\n\n  return words;\n};\n","const files = {\n  skills: {\n    content: \"Java\\nReact\\nAWS\\n\",\n  },\n};\n\nexport default function processCommand(command) {\n  const splitCommand = command.split(\" \");\n\n  switch (splitCommand[0]) {\n    case \"ls\":\n      return ls();\n    case \"cat\":\n      return cat(splitCommand[1]);\n    case \"help\":\n      return help();\n    default:\n      return \"Command not found. Type **help** to see available commands\";\n  }\n}\n\nfunction help() {\n  const functionHelpMap = {\n    cmd: {\n      usage: \"usage\",\n      help: \"help\",\n    },\n    ls: {\n      usage: \"ls <filename>\",\n      help: \"Displays files in the folder\",\n    },\n    cat: {\n      usage: \"cat <filename>\",\n      help: \"Displays content of the file\",\n    },\n  };\n  var helpMessage = \"\";\n\n  const { maxHelpTotalLength, maxKeyLength, maxUsageLength, maxHelpLength } =\n    getMaxLengths(functionHelpMap);\n  const horizontalBar = \"_\".repeat(maxHelpTotalLength - 1) + \"\\n\";\n\n  helpMessage += horizontalBar;\n\n  for (const key in functionHelpMap) {\n    var indivHelp = `| ${appendWhiteSpace(\n      key,\n      maxKeyLength\n    )} | ${appendWhiteSpace(\n      functionHelpMap[key][\"usage\"],\n      maxUsageLength\n    )} | ${appendWhiteSpace(functionHelpMap[key][\"help\"], maxHelpLength)} | \\n`;\n    helpMessage += indivHelp;\n  }\n  helpMessage += horizontalBar;\n  return helpMessage;\n}\n\n// Fills space until the string reaches total length\nfunction appendWhiteSpace(str, totalLength) {\n  var result = str;\n  while (result.length < totalLength) {\n    result += \" \";\n  }\n  return result;\n}\n\nfunction ls() {\n  return Object.keys(files).join(\"\\t\");\n}\n\nfunction cat(file) {\n  return files[file];\n}\n\nconst getMaxLengths = (map) => {\n  var maxHelpTotalLength = 0;\n  var maxKeyLength = 0;\n  var maxUsageLength = 0;\n  var maxHelpLength = 0;\n  for (const key in map) {\n    const help = `| ${key} | ${map[key][\"usage\"]} | ${map[key][\"help\"]} |\\n`;\n    maxHelpTotalLength = Math.max(help.length, maxHelpTotalLength);\n\n    maxKeyLength = Math.max(key.length, maxKeyLength);\n    maxUsageLength = Math.max(map[key][\"usage\"].length, maxUsageLength);\n    maxHelpLength = Math.max(map[key][\"help\"].length, maxHelpLength);\n  }\n  return {\n    maxHelpTotalLength,\n    maxKeyLength,\n    maxUsageLength,\n    maxHelpLength,\n  };\n};\n","import styled from \"styled-components\";\nimport { terminalFontSize } from \"../../utils/fontsize\";\nimport { useState, useEffect } from \"react\";\nimport {\n  terminalPrompt,\n  messageSeparator,\n  TYPE_WITH_PROMPT_TEXT,\n  TYPE_SYSTEM_TEXT,\n} from \"../../utils/messageprotocol\";\nimport { prettierHistory, useFocus, PromptText } from \"../../hooks/useFocus\";\nimport processCommand from \"../../utils/terminalfilesystem/filesystem\";\n\nexport default function TerminalMainScreen() {\n  const [history, setHistory] = useState([]);\n  const [ref, setFocus] = useFocus();\n\n  useEffect(() => {\n    setFocus();\n    // eslint-disable-next-line\n  }, [history]);\n\n  const handleKey = (e) => {\n    if (e.key === \"Enter\") {\n      const command = ref.current.textContent;\n      const submittedLine = `${TYPE_WITH_PROMPT_TEXT}${messageSeparator}${command}\\n`;\n      const systemReturns = `${TYPE_SYSTEM_TEXT}${messageSeparator}${processCommand(\n        command\n      )}\\n`;\n      // empty content\n      ref.current.textContent = \"\";\n\n      const newHistory = [...history, submittedLine, systemReturns];\n      // prevent newline from forming\n      e.preventDefault();\n      setHistory(newHistory);\n      setFocus();\n    }\n  };\n\n  const WindowContent = styled.div`\n    height: 100%;\n    background: grey;\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n    padding: 10px;\n    color: whitesmoke;\n    contenteditable: true;\n    font-size: ${terminalFontSize}px;\n    white-space: pre-wrap;\n    overflow-y: scroll;\n  `;\n  const TerminalInput = styled.span``;\n\n  const handleTerminalClick = () => {\n    setFocus();\n  };\n\n  return (\n    <WindowContent onClick={handleTerminalClick}>\n      {prettierHistory(history)}\n      <PromptText>{terminalPrompt}</PromptText>\n      <TerminalInput\n        ref={ref}\n        onKeyDown={handleKey}\n        contentEditable={true}\n      ></TerminalInput>\n    </WindowContent>\n  );\n}\n","export const terminalFontSize = 16;\n","import styled from \"styled-components\";\nimport TerminalStatusBar from \"./TerminalStatusBar\";\nimport TerminalMainScreen from \"./TerminalMainScreen\";\n\nexport default function Terminal() {\n\n\tconst Window = styled.div`\n      width: 800px;\n      height: 600px;\n      border-radius: 15px;\n      position: relative;\n      display: flex;\n      flex-direction: column;\n\t`\n\treturn (\n\t\t<>\n\t\t\t<Window>\n\t\t\t\t<TerminalStatusBar/>\n\t\t\t\t<TerminalMainScreen/>\n\t\t\t</Window>\n\t\t</>\n\t)\n}","import './App.css';\nimport styled from \"styled-components\";\nimport BottomInfo from \"./components/bottominfo/BottomInfo\"\nimport Terminal from \"./components/terminal/Terminal\";\n\nexport default function App() {\n\tconst Background = styled.div`\n      background-color: yellowgreen;\n      height: 100vh;\n\t`\n\tconst Centered = styled.div`\n      height: 100vh;\n\t  display: flex;\n      align-items: center;\n      justify-content: center;\n\t`\n\treturn (<>\n\t\t<Background>\n\t\t\t<Centered>\n\t\t\t\t<Terminal/>\n\t\t\t</Centered>\n\t\t\t<BottomInfo/>\n\t\t</Background>\n\n\t</>)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<App/>, document.getElementById('root')\n);"],"sourceRoot":""}