{"version":3,"sources":["utils/constants.js","components/bottominfo/BottomInfo.js","components/terminal/TerminalStatusBar.js","utils/terminalfilesystem/files.exec.js","utils/terminalfilesystem/files.static.js","utils/terminalfilesystem/filesystem.js","utils/messageprotocol.js","hooks/useFocus.js","components/terminal/TerminalMainScreen.js","components/terminal/Terminal.js","components/topdrop/TopDrop.js","components/projectlist/ProjectList.js","App.js","index.js"],"names":["phoneWidth","BottomDrop","styled","div","Details","h1","SubDetails","p","BottomInfo","WindowBar","ControlContainer","Control","props","maximize","css","minimize","cancel","TerminalStatusBar","randomFacts","executables","randomFact","executable","traversedRandIndex","length","genRandIndex","Math","floor","random","randIndex","includes","listAllExecFiles","Object","keys","commandNotFound","files","content","executeCommand","command","splitCommand","split","firstArg","file","cat","functionHelpMap","usage","help","ls","clear","TIP1","TIP2","helpMessage","getMaxLengths","maxHelpTotalLength","maxKeyLength","maxUsageLength","maxHelpLength","width","window","innerWidth","horizontalBar","repeat","key","keyName","appendWhiteSpace","keyUsage","keyHelp","str","totalLength","result","map","max","listAllStaticFiles","processCommand","startsWith","boldifiedFiles","e","sort","a","b","join","fileName","executeFile","secondArg","filter","messageSeparator","terminalPrompt","TYPE_SYSTEM_TEXT","TYPE_WITH_PROMPT_TEXT","PromptText","span","prettierHistory","history","line","array","processBold","Bold","text","words","splitText","i","push","WindowContent","terminalFontSize","TerminalMainScreen","useState","setHistory","inputRef","useRef","current","focus","useFocus","ref","setFocus","useEffect","TerminalInput","onClick","onKeyDown","textContent","submittedLine","systemReturns","newHistory","preventDefault","lastArg","isExecPrefixed","fileMatch","f","contentEditable","Window","Terminal","Button","label","TopContainer","screen","ScreenTitle","show","titles","1","title","2","3","TopDrop","setScreen","setTitle","isShowTitle","setIsShowTitle","setTimeout","useShowTitle","brieflyShow","handleSwitchScreen","toScreen","List","Container","Card","RepoTitle","RepoDetail","repoDetails","details","longDetails","generateRepoList","from","to","detail","RepoCard","ProjectList","windowWidth","setWindowWidth","resizeHandler","addEventListener","removeEventListener","Carousel","Screens","Screen","first","second","third","Centered","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.837ea82e.chunk.js","sourcesContent":["export const terminalFontSize = 16;\nexport const phoneWidth = 400;\n","import styled from \"styled-components\";\nimport { phoneWidth } from \"../../utils/constants\";\nconst BottomDrop = styled.div`\n  //  set document as parent\n  position: absolute;\n  bottom: 20px;\n  width: 100%;\n  text-align: center;\n`;\nconst Details = styled.h1`\n  color: #fff;\n  font-weight: normal;\n  font-size: 16px;\n`;\n\nconst SubDetails = styled.p`\n  color: aliceblue;\n  font-size: 14px;\n  @media (max-width: ${phoneWidth}px) {\n    display: none;\n  }\n`;\nexport default function BottomInfo() {\n  return (\n    <BottomDrop>\n      <Details>© Hajin Kim</Details>\n      <SubDetails>\n        Made with ❤, Dell UltraSharp 27\", Kensington Orbit, Mac Mini M1,\n        Microsoft Ergonomic Keyboard, and a bit of music in the background\n      </SubDetails>\n    </BottomDrop>\n  );\n}\n","import styled, { css } from \"styled-components\";\nimport { phoneWidth } from \"../../utils/constants\";\nconst WindowBar = styled.div`\n  width: 100%;\n  height: 30px;\n  background-color: aliceblue;\n  display: flex;\n  justify-content: flex-start;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nconst ControlContainer = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n`;\nconst Control = styled.div`\n  height: 12px;\n  width: 12px;\n  border-radius: 8px;\n  margin-right: 5px;\n  ${(props) =>\n    props.maximize &&\n    css`\n      background-color: green;\n    `}\n  ${(props) =>\n    props.minimize &&\n    css`\n      background-color: orange;\n    `}\n      ${(props) =>\n    props.cancel &&\n    css`\n      background-color: crimson;\n    `}\n  @media(max-width: ${phoneWidth}px) {\n    height: 10px;\n    width: 10px;\n    border-radius: 5px;\n  }\n`;\nexport default function TerminalStatusBar() {\n  return (\n    <WindowBar>\n      <ControlContainer>\n        <Control cancel />\n        <Control minimize />\n        <Control maximize />\n      </ControlContainer>\n    </WindowBar>\n  );\n}\n","const randomFacts = [\n  \"I can see the beach from my house\",\n  \"M1 Mac Mini cannot run VM, so marking SE206 was a pain\",\n  \"I like jAZz\",\n  \"Of the Korean singers, I like Sun Si Kyung, Kim Dong Reul, Lee Juck, Naul, Lee Seung Gi\",\n  \"Have you heard of the song 'All I need' by Jacob Collier? It gives an insight into how microtonality can be incorporated into pop musics.\",\n  \"I can play piano and violin at Grade 8 level\",\n  \"Robot cleaner is very nice\",\n  \"I went for Hillary Trail for my Duke of Edinburgh Gold award, which was 80km walk over 4 nights & 5 days.\",\n  \"Hydrating (>3L) & sugar supplement (through chocolate bars, jellies) are essential for tramping\",\n  \"My favourite books thus far are King Lear and Macbeth\",\n  \"I need 9~10 hours of sleep per day\",\n  \"Samsung T7 SSD can be used to directly transfer phone media to SSD\",\n  \"Ipad is best used for quick diagrams, and maybe Netflix too (TV is better)\",\n  \"I have an electric guitar\",\n];\n\nexport function executeFile(command) {\n  // expected format: ./randomFact\n  const fileName = command.split(\"./\")[1];\n  if (executables[fileName]) {\n    return executables[fileName].executable();\n  }\n  return `${fileName} is not an executable or does not exist`;\n}\n\nconst executables = {\n  randomFact: {\n    executable: randomFact,\n  },\n};\n\nvar traversedRandIndex = [];\n// Actually a pseudo random fact generator. Would try return unread fact\n// if all the facts have been read, it will reset the cycle\nfunction randomFact() {\n  // if all the facts were traversed, reset the record\n  if (traversedRandIndex.length === randomFacts.length) {\n    traversedRandIndex = [];\n  }\n  // return unseen fact\n  const genRandIndex = () => Math.floor(Math.random() * randomFacts.length);\n  var randIndex = genRandIndex();\n  while (traversedRandIndex.includes(randIndex)) {\n    randIndex = genRandIndex();\n  }\n  traversedRandIndex = [...traversedRandIndex, randIndex];\n  return randomFacts[randIndex];\n}\n\n// Files common methods\nexport function listAllExecFiles() {\n  return Object.keys(executables);\n}\n","import { phoneWidth } from \"../constants\";\n\nconst commandNotFound =\n  \"Command not found. Type **help** to see available commands.\";\n\nconst files = {\n  \"aboutMe.txt\": {\n    content: `\nHi there! I'm Hajin. Really glad to see you here :)\n      \nI'm a final year SE student seeking for a graduate role for 2022 year-end. \n      \nI have working knowledge and practical experiences in MERN, Java and Objective C. \n  \nInterested in good software design, TDD, Agile. Love leaving a record of what I learn (optimizemarginality.tistory.com/), and sharing it with others. Tramping/travelling is my annual ritual.`,\n  },\n  \"skills.txt\": {\n    content:\n      \"**> familiar**: Java, Javascript/React, Python, git, JPA Hibernate\\n\" +\n      \"**= familiar**: C, Objective-C, Android, html/css, bash, JAX-RS\\n\" +\n      \"**< familiar**: AWS EC2, MATLAB\",\n  },\n};\n\nexport function executeCommand(command) {\n  // expected format: cat file\n  const splitCommand = command.split(\" \");\n  const executable = splitCommand[0];\n  const firstArg = splitCommand[1];\n\n  switch (executable) {\n    case \"cat\":\n      return cat(firstArg);\n    case \"help\":\n      return help();\n    default:\n      return commandNotFound;\n  }\n}\n\nfunction help() {\n  const functionHelpMap = {\n    command: {\n      usage: \"usage\",\n      help: \"help\",\n    },\n    ls: {\n      usage: \"ls <filename>\",\n      help: \"Displays files in the folder\",\n    },\n    cat: {\n      usage: \"cat <filename>\",\n      help: \"Displays content of the file\",\n    },\n    clear: {\n      usage: \"clear\",\n      help: \"Clears the console\",\n    },\n    TIP1: {\n      usage: \"./<executable>\",\n      help: \"Executes an executable\",\n    },\n    TIP2: {\n      usage: \"press tab\",\n      help: \"tab autocompletes filename\",\n    },\n  };\n  var helpMessage = \"\";\n\n  const { maxHelpTotalLength, maxKeyLength, maxUsageLength, maxHelpLength } =\n    getMaxLengths(functionHelpMap);\n  const width = window.innerWidth;\n  const horizontalBar =\n    width <= phoneWidth ? \"\\n\" : \"_\".repeat(maxHelpTotalLength + 8) + \"\\n\";\n\n  helpMessage += horizontalBar;\n\n  for (const key in functionHelpMap) {\n    const keyName = appendWhiteSpace(key, maxKeyLength);\n    const keyUsage = appendWhiteSpace(\n      functionHelpMap[key][\"usage\"],\n      maxUsageLength\n    );\n    const keyHelp = appendWhiteSpace(\n      functionHelpMap[key][\"help\"],\n      maxHelpLength\n    );\n    var indivHelp =\n      width <= phoneWidth\n        ? `**${key}** (${functionHelpMap[key][\"usage\"]}): ${functionHelpMap[key][\"help\"]}\\n`\n        : `| ${keyName} | ${keyUsage} | ${keyHelp} | \\n`;\n    helpMessage += indivHelp;\n  }\n  helpMessage += horizontalBar;\n  return helpMessage;\n}\n\n// Fills space until the string reaches total length\nfunction appendWhiteSpace(str, totalLength) {\n  var result = str;\n  while (result.length < totalLength) {\n    result += \" \";\n  }\n  return result;\n}\n\nfunction cat(file) {\n  if (!file) {\n    return commandNotFound;\n  }\n  if (!files[file]) {\n    return (\n      \"Cannot find the file called \" + file + \". Type **ls** to list files.\"\n    );\n  }\n  return files[file][\"content\"];\n}\n\nconst getMaxLengths = (map) => {\n  var maxHelpTotalLength = 0;\n  var maxKeyLength = 0;\n  var maxUsageLength = 0;\n  var maxHelpLength = 0;\n  for (const key in map) {\n    const help = `|${key}|${map[key][\"usage\"]}|${map[key][\"help\"]}|\\n`;\n    maxHelpTotalLength = Math.max(help.length, maxHelpTotalLength);\n\n    maxKeyLength = Math.max(key.length, maxKeyLength);\n    maxUsageLength = Math.max(map[key][\"usage\"].length, maxUsageLength);\n    maxHelpLength = Math.max(map[key][\"help\"].length, maxHelpLength);\n  }\n  return {\n    maxHelpTotalLength,\n    maxKeyLength,\n    maxUsageLength,\n    maxHelpLength,\n  };\n};\n\n// Files common methods\nexport function listAllStaticFiles() {\n  return Object.keys(files);\n}\n","import { executeFile } from \"./files.exec\";\nimport { executeCommand } from \"./files.static\";\nimport { listAllExecFiles } from \"./files.exec\";\nimport { listAllStaticFiles } from \"./files.static\";\n\nexport default function processCommand(command) {\n  if (command.startsWith(\"ls\")) {\n    const boldifiedFiles = listAllExecFiles().map((e) => `**${e}**`);\n\n    const files = [...boldifiedFiles, ...listAllStaticFiles()].sort(\n      (a, b) => a - b\n    );\n    return files.join(\"\\t\");\n  }\n\n  // if executable\n  if (command.startsWith(\"./\")) {\n    return executeFile(command);\n  }\n\n  // check if second argument (filename) is executable,\n  // which is invalid for 'cat filename' etc\n  const secondArg = command.split(\" \")[1];\n  const isExecutable = listAllExecFiles().filter((e) => e === secondArg);\n  if (isExecutable.length !== 0) {\n    return `${command.split(\" \")[1]} is an executable. Run it with ./ prefix`;\n  }\n  return executeCommand(command);\n}\n\nexport function fileArray() {\n  return [...listAllExecFiles(), ...listAllStaticFiles()];\n}\n","// this distinguishes between different message types\n// eg `anonymous@hajinkim >` should be displayed differently to other texts\n// this protocol allows you to easily distinguish those\n\n// format of message is: \"<PROTOCOL><messageSeparator><MESSAGE>\"\nexport const messageSeparator = \"//\"\n\nexport const TYPE_INDEX = 0\nexport const CONTENT_INDEX = 1\n\nexport const terminalPrompt = \"anonymous@hajinkim >\"\n\nexport const TYPE_SYSTEM_TEXT = \"System Returns\"\nexport const TYPE_WITH_PROMPT_TEXT = \"User Inputs\"\n\n\n\n\n\n","import {\n  CONTENT_INDEX,\n  messageSeparator,\n  terminalPrompt,\n  TYPE_INDEX,\n  TYPE_SYSTEM_TEXT,\n  TYPE_WITH_PROMPT_TEXT,\n} from \"../utils/messageprotocol\";\nimport { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nexport const PromptText = styled.span`\n  font-weight: bolder;\n  color: navajowhite;\n  margin-right: 5px;\n`;\n\nexport const useFocus = () => {\n  const inputRef = useRef();\n  const focusInput = () => {\n    inputRef.current.focus();\n  };\n\n  return [inputRef, focusInput];\n};\n\nexport const prettierHistory = (history) => {\n  return history\n    .map((line) => line.split(messageSeparator))\n    .map((array) => {\n      if (array[TYPE_INDEX].includes(TYPE_WITH_PROMPT_TEXT)) {\n        return (\n          <>\n            <PromptText>{terminalPrompt}</PromptText>\n            {array[CONTENT_INDEX]}\n          </>\n        );\n      }\n      if (array[TYPE_INDEX].includes(TYPE_SYSTEM_TEXT)) {\n        return processBold(array[CONTENT_INDEX]);\n      }\n\n      return <></>;\n    });\n};\n\nconst Bold = styled.b`\n  background: ;\n  color: white;\n`;\n\nconst processBold = (text) => {\n  var words = [];\n  const splitText = text.split(\"**\");\n\n  for (var i = 0; i < splitText.length; i++) {\n    if (i % 2 !== 0) {\n      words.push(<Bold>{splitText[i]}</Bold>);\n    } else {\n      words.push(splitText[i]);\n    }\n  }\n\n  return words;\n};\n","import styled from \"styled-components\";\nimport { terminalFontSize, phoneWidth } from \"../../utils/constants\";\nimport { useState, useEffect } from \"react\";\nimport { fileArray } from \"../../utils/terminalfilesystem/filesystem\";\nimport {\n  terminalPrompt,\n  messageSeparator,\n  TYPE_WITH_PROMPT_TEXT,\n  TYPE_SYSTEM_TEXT,\n} from \"../../utils/messageprotocol\";\nimport { prettierHistory, useFocus, PromptText } from \"../../hooks/useFocus\";\nimport processCommand from \"../../utils/terminalfilesystem/filesystem\";\nconst WindowContent = styled.div`\n  height: 100%;\n  background: grey;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  padding: 10px;\n  color: whitesmoke;\n  contenteditable: true;\n  font-size: ${terminalFontSize}px;\n  white-space: pre-wrap;\n  overflow-y: scroll;\n  font-family: \"JetBrains Mono\", monospace;\n  @media (max-width: ${phoneWidth}px) {\n    font-size: ${terminalFontSize * 0.4}px;\n    line-height: 1.5em;\n  }\n  &::-webkit-scrollbar{\n    display: none;\n  }\n`;\nexport default function TerminalMainScreen() {\n  const [history, setHistory] = useState([]);\n  const [ref, setFocus] = useFocus();\n\n  useEffect(() => {\n    setFocus();\n    // eslint-disable-next-line\n  }, [history]);\n\n  const handleKey = (e) => {\n    if (e.key === \"Enter\") {\n      const command = ref.current.textContent;\n      const submittedLine = `${TYPE_WITH_PROMPT_TEXT}${messageSeparator}${command}\\n`;\n      const systemReturns = `${TYPE_SYSTEM_TEXT}${messageSeparator}${processCommand(\n        command\n      )}\\n`;\n\n      if (command.includes(\"clear\")) {\n        setHistory([]);\n        return;\n      }\n\n      // empty content\n      ref.current.textContent = \"\";\n\n      const newHistory = [...history, submittedLine, systemReturns];\n      // prevent newline from forming\n      e.preventDefault();\n      setHistory(newHistory);\n      setFocus();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      const splitCommand = ref.current.textContent.split(\" \");\n      var lastArg = splitCommand[splitCommand.length - 1];\n      // check if command is prefixed with ./\n      const isExecPrefixed = lastArg.startsWith(\"./\");\n      if (isExecPrefixed) {\n        lastArg = lastArg.split(\"./\")[1];\n      }\n\n      const fileMatch = fileArray().filter((f) => f.startsWith(lastArg));\n\n      if (fileMatch) {\n        if (fileMatch[0]) {\n          splitCommand[splitCommand.length - 1] = fileMatch[0];\n          ref.current.textContent = isExecPrefixed\n            ? [\"./\", fileMatch[0]].join(\"\")\n            : splitCommand.join(\" \");\n        }\n      }\n    }\n  };\n\n  const TerminalInput = styled.span``;\n\n  const handleTerminalClick = () => {\n    setFocus();\n  };\n\n  return (\n    <WindowContent onClick={handleTerminalClick}>\n      {\"Type `help` to display possible commands\\n\"}\n      {prettierHistory(history)}\n      <PromptText>{terminalPrompt}</PromptText>\n      <TerminalInput\n        ref={ref}\n        onKeyDown={handleKey}\n        contentEditable={true}\n      ></TerminalInput>\n    </WindowContent>\n  );\n}\n","import styled from \"styled-components\";\nimport TerminalStatusBar from \"./TerminalStatusBar\";\nimport TerminalMainScreen from \"./TerminalMainScreen\";\nimport { phoneWidth } from \"../../utils/constants\";\nconst Window = styled.div`\n  width: 800px;\n  height: 600px;\n  border-radius: 15px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n    margin: 20px;\n\n  @media (max-width: ${phoneWidth}px) {\n    height: 200px;\n  }\n`;\nexport default function Terminal() {\n  return (\n    <>\n      <Window>\n        <TerminalStatusBar />\n        <TerminalMainScreen />\n      </Window>\n    </>\n  );\n}\n","import styled, {css} from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nconst Button = styled.label`\n  display: inline-block;\n  width: 50px;\n  height: 5px;\n  margin: 2px;\n  background-color: white;\n  cursor: pointer;\n`\nconst TopContainer = styled.div`\n  position: absolute;\n  top: 20px;\n  width: 100%;\n  text-align: center;\n\n  ${Button}:nth-child(${props => props.screen}) {\n    background-color: yellowgreen;\n  }\n`\n\nconst ScreenTitle = styled.h1`\n  display: block;\n  color: transparent;\n  background-color: transparent;\n  padding: 15px;\n  transition: 2s;\n  ${props => props.show && css`\n    color: white;\n    background-color: darkgray;\n  `}\n\n  ${props => !props.show && css`\n    color: transparent;\n  `}\n`\nconst titles = {\n\t1: {\n\t\ttitle: \"Interactive Console\"\n\t},\n\t2: {\n\t\ttitle: \"Projects\"\n\t},\n\t3: {\n\t\ttitle: \"Void\"\n\t}\n}\nexport default function TopDrop({screen, setScreen}) {\n\tconst [title, setTitle] = useState(titles[\"1\"].title)\n\tconst [isShowTitle, brieflyShow] = useShowTitle()\n\tuseEffect(() => {\n\t\tbrieflyShow()\n\t})\n\tconst handleSwitchScreen = (toScreen) => {\n\t\tsetScreen(toScreen)\n\t\tsetTitle(titles[toScreen].title)\n\t\tbrieflyShow()\n\t}\n\n\treturn (\n\t\t<TopContainer screen={screen}>\n\t\t\t<Button onClick={() => handleSwitchScreen(1)}/>\n\t\t\t<Button onClick={() => handleSwitchScreen(2)}/>\n\t\t\t<Button onClick={() => handleSwitchScreen(3)}/>\n\t\t\t<ScreenTitle show={isShowTitle}>\n\t\t\t\t{title}\n\t\t\t</ScreenTitle>\n\t\t</TopContainer>\n\t)\n}\n\nfunction useShowTitle(){\n\tconst [isShowTitle, setIsShowTitle] = useState(false)\n\tconst brieflyShow = () => {\n\t\tsetIsShowTitle(true)\n\t\tsetTimeout(() => {\n\t\t\tsetIsShowTitle(false)\n\t\t}, 2000)\n\t}\n\treturn [isShowTitle, brieflyShow]\n}","import styled from \"styled-components\";\nimport {useState, useEffect} from \"react\";\n\n\nconst List = styled.div`\noverflow: hidden;\n  display: flex;\n  flex-direction: column;\n  @media (max-height: 1000px) {\n    height: 500px;\n    overflow: scroll;\n  };\n  &::-webkit-scrollbar{\n\tdisplay: none;\n  }\n`\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\n\nconst Card = styled.div`\n  padding: 10px;\n  box-sizing: border-box;\n  color: black;\n  border-radius: 10px;\n  background-color: white;\n  margin: 6px;\n  width: 400px;\n  height: 130px;\n  @media (max-width: 400px) {\n    width: 300px;\n    height: 100px;\n  }\n`\nconst RepoTitle = styled.div`\n  color: rebeccapurple;\n  font-weight: bold;\n`\nconst RepoDetail = styled.div`\n  color: darkgray;\n  font-weight: normal;\n`\nconst repoDetails = [\n\t{\n\t\ttitle: \"Parallel-Scheduler\",\n\t\tdetails: \"Fastest for parallel speed in SOFTENG 306\",\n\t\tlongDetails: \"\"\n\t},\n\t{\n\t\ttitle: \"Quinzical\",\n\t\tdetails: \"Fastest for parallel speed in SOFTENG 306\",\n\t\tlongDetails: \"\"\n\t},\n\t{\n\t\ttitle: \"chatapp\",\n\t\tdetails: \"Fastest for parallel speed in SOFTENG 306\",\n\t\tlongDetails: \"\"\n\t},\n\t{\n\t\ttitle: \"NZPMC-demo\",\n\t\tdetails: \"Fastest for parallel speed in SOFTENG 306\",\n\t\tlongDetails: \"\"\n\t},\n\t{\n\t\ttitle: \"nzpmc2022-registration\",\n\t\tdetails: \"Fastest for parallel speed in SOFTENG 306\",\n\t\tlongDetails: \"\"\n\t},\n\t{\n\t\ttitle: \"biblenextjs\",\n\t\tdetails: \"Fastest for parallel speed in SOFTENG 306\",\n\t\tlongDetails: \"\"\n\t},\n]\n/**\n * if from = 0, to = 3, then there will be 3 repos in total (0, 1, 2)\n * @param from inclusive\n * @param to exclusive\n */\nconst generateRepoList = (from, to) => {\n\tconst result = []\n\tfor (let i = from; i < to; i++) {\n\t\tresult.push(<RepoCard title={repoDetails[i].title} detail={repoDetails[i].details}/>)\n\t}\n\treturn result\n}\n\nconst RepoCard = ({title, detail}) => {\n\treturn (\n\t\t<Card>\n\t\t\t<RepoTitle>{title}</RepoTitle>\n\t\t\t<RepoDetail>{detail}</RepoDetail>\n\t\t</Card>\n\t)\n}\nexport default function ProjectList() {\n\tconst [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\tuseEffect(() => {\n\t\tconst resizeHandler = () => setWindowWidth(window.innerWidth)\n\t\twindow.addEventListener('resize', resizeHandler)\n\t\treturn () => window.removeEventListener('resize', resizeHandler)\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t{windowWidth <= 800 ?\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{generateRepoList(0, repoDetails.length)}\n\t\t\t\t\t</List>\n\t\t\t\t\t: <>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t{generateRepoList(0, 3)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t{generateRepoList(3, 6)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</>}\n\n\n\t\t\t\t{/*{conditionalListRender()}*/}\n\t\t\t\t{/*{windowWidth}*/}\n\t\t\t</Container>\n\t\t</>\n\t)\n\n}","import \"./App.css\";\nimport styled, {css} from \"styled-components\";\nimport BottomInfo from \"./components/bottominfo/BottomInfo\";\nimport Terminal from \"./components/terminal/Terminal\";\nimport TopDrop from \"./components/topdrop/TopDrop\";\nimport {useState} from \"react\";\nimport ProjectList from \"./components/projectlist/ProjectList\";\n\nconst Carousel = styled.div`\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n`\n\nconst Screens = styled.div`\n  height: 100vh;\n  width: 300%;\n  position: absolute;\n  top: 0;\n  ${(props) => props.screen && css`\n    left: ${(props.screen - 1) * -100}%;\n  `};\n  transition: 0.5s;\n`\n\nconst Screen = styled.div`\n  width: 33.3333%;\n  background-color: coral;\n  height: 100vh;\n  float: left;\n\n  ${(props) => props.first && css`\n    background-color: darkblue;\n  `}\n  ${(props) => props.second && css`\n    background-color: cornflowerblue;\n  `}\n  ${(props) => props.third && css`\n    background-color: midnightblue;\n  `}\n\n`\n\n// const Background = styled.div`\n//   background-color: yellowgreen;\n//   height: 100vh;\n// `;\nconst Centered = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport default function App() {\n\tconst [screen, setScreen] = useState(1)\n\treturn (\n\t\t<>\n\n\t\t\t<Carousel>\n\t\t\t\t<Screens screen={screen}>\n\t\t\t\t\t<Screen first>\n\t\t\t\t\t\t<Centered>\n\t\t\t\t\t\t\t<Terminal />\n\t\t\t\t\t\t</Centered>\n\t\t\t\t\t</Screen>\n\t\t\t\t\t<Screen second>\n\t\t\t\t\t\t<Centered>\n\t\t\t\t\t\t\t<ProjectList/>\n\t\t\t\t\t\t</Centered>\n\t\t\t\t\t</Screen>\n\t\t\t\t\t<Screen third/>\n\t\t\t\t</Screens>\n\t\t\t</Carousel>\n\t\t\t<TopDrop screen={screen} setScreen={setScreen}/>\n\t\t\t<BottomInfo />\n\t\t</>\n\t);\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<App/>, document.getElementById('root')\n);"],"sourceRoot":""}