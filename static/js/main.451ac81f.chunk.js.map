{"version":3,"sources":["utils/constants.js","components/bottominfo/BottomInfo.js","components/terminal/TerminalStatusBar.js","utils/terminalfilesystem/files.exec.js","utils/terminalfilesystem/files.static.js","utils/terminalfilesystem/filesystem.js","utils/messageprotocol.js","hooks/useFocus.js","components/terminal/TerminalMainScreen.js","components/terminal/Terminal.js","App.js","index.js"],"names":["phoneWidth","BottomDrop","styled","div","Details","h1","SubDetails","p","BottomInfo","WindowBar","ControlContainer","Control","props","maximize","css","minimize","cancel","TerminalStatusBar","randomFacts","executables","randomFact","executable","Math","floor","random","length","listAllExecFiles","Object","keys","commandNotFound","files","content","executeCommand","command","splitCommand","split","firstArg","file","cat","functionHelpMap","usage","help","ls","clear","TIP1","TIP2","helpMessage","getMaxLengths","maxHelpTotalLength","maxKeyLength","maxUsageLength","maxHelpLength","width","window","innerWidth","horizontalBar","repeat","key","keyName","appendWhiteSpace","keyUsage","keyHelp","str","totalLength","result","map","max","listAllStaticFiles","processCommand","startsWith","boldifiedFiles","e","sort","a","b","join","fileName","executeFile","secondArg","filter","messageSeparator","terminalPrompt","TYPE_SYSTEM_TEXT","TYPE_WITH_PROMPT_TEXT","PromptText","span","prettierHistory","history","line","array","includes","processBold","Bold","text","words","splitText","i","push","WindowContent","terminalFontSize","TerminalMainScreen","useState","setHistory","inputRef","useRef","current","focus","useFocus","ref","setFocus","useEffect","TerminalInput","onClick","onKeyDown","textContent","submittedLine","systemReturns","newHistory","preventDefault","lastArg","isExecPrefixed","fileMatch","f","contentEditable","Window","Terminal","Background","Centered","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.451ac81f.chunk.js","sourcesContent":["export const terminalFontSize = 16;\nexport const phoneWidth = 400;\n","import styled from \"styled-components\";\nimport { phoneWidth } from \"../../utils/constants\";\nconst BottomDrop = styled.div`\n  //  set document as parent\n  position: absolute;\n  bottom: 20px;\n  width: 100%;\n  text-align: center;\n`;\nconst Details = styled.h1`\n  color: #fff;\n  font-weight: normal;\n  font-size: 16px;\n`;\n\nconst SubDetails = styled.p`\n  color: aliceblue;\n  font-size: 14px;\n  @media (max-width: ${phoneWidth}px) {\n    display: none;\n  }\n`;\nexport default function BottomInfo() {\n  return (\n    <BottomDrop>\n      <Details>© Hajin Kim</Details>\n      <SubDetails>\n        Made with ❤, Dell UltraSharp 27\", Kensington Orbit, Mac Mini M1,\n        Microsoft Ergonomic Keyboard, and a bit of music in the background\n      </SubDetails>\n    </BottomDrop>\n  );\n}\n","import styled, { css } from \"styled-components\";\nimport { phoneWidth } from \"../../utils/constants\";\nconst WindowBar = styled.div`\n  width: 100%;\n  height: 30px;\n  background-color: aliceblue;\n  display: flex;\n  justify-content: flex-start;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nconst ControlContainer = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n`;\nconst Control = styled.div`\n  height: 12px;\n  width: 12px;\n  border-radius: 8px;\n  margin-right: 5px;\n  ${(props) =>\n    props.maximize &&\n    css`\n      background-color: green;\n    `}\n  ${(props) =>\n    props.minimize &&\n    css`\n      background-color: orange;\n    `}\n      ${(props) =>\n    props.cancel &&\n    css`\n      background-color: crimson;\n    `}\n  @media(max-width: ${phoneWidth}px) {\n    height: 10px;\n    width: 10px;\n    border-radius: 5px;\n  }\n`;\nexport default function TerminalStatusBar() {\n  return (\n    <WindowBar>\n      <ControlContainer>\n        <Control cancel />\n        <Control minimize />\n        <Control maximize />\n      </ControlContainer>\n    </WindowBar>\n  );\n}\n","const randomFacts = [\n  \"I can see the beach from my house\",\n  \"M1 Mac Mini cannot run VM, so marking SE206 was a pain\",\n  \"I like jAZz\",\n  \"Of the Korean singers, I like Sun Si Kyung, Kim Dong Reul, Lee Juck, Naul, Lee Seung Gi. Sorry no BTS no Blackpink\",\n  \"Have you heard of the song 'All I need' by Jacob Collier? It gives an insight into how microtonality can be incorporated into pop musics.\",\n  \"In Year 13, I found King Lear to carry a very profound lesson. On the surface, it seems to suggest that falling into sweet words and turning away from the truth leads to self-destruction. But it makes you wonder if telling the truth was necessary - especailly if it would have worked for peaceful denouement of Lear's life. It's quite complex.\",\n  \"I can play piano and violin at Grade 8 level\",\n  \"Robot cleaner is very nice - I recommend Roborock S7\",\n  \"I went for Hillary Trail for my Duke of Edinburgh Gold award, which was 80km walk over 4 nights & 5 days. Hydrating & sugar supplement (through chocolate bars, jellies) are essential. You would usually walk from 8 to 3 ish, and it gets quite dark even from early afternoon at a mountain.\",\n];\n\nexport function executeFile(command) {\n  // expected format: ./randomFact\n  const fileName = command.split(\"./\")[1];\n  return executables[fileName].executable();\n}\n\nconst executables = {\n  randomFact: {\n    executable: randomFact,\n  },\n};\n\nfunction randomFact() {\n  return randomFacts[Math.floor(Math.random() * randomFacts.length)];\n}\n\n// Files common methods\nexport function listAllExecFiles() {\n  return Object.keys(executables);\n}\n","import { phoneWidth } from \"../constants\";\n\nconst commandNotFound =\n  \"Command not found. Type **help** to see available commands.\";\n\nconst files = {\n  \"aboutMe.txt\": {\n    content: `\nHi there! I'm Hajin. Really glad to see you here :)\n      \nI'm a final year SE student seeking for a graduate role for 2022 year-end. \n      \nI have working knowledge and practical experiences in MERN, Java and Objective C. \n  \nInterested in good software design, TDD, Agile. Love leaving a record of what I learn (optimizemarginality.tistory.com/), and sharing it with others. Tramping/travelling is my annual ritual.`,\n  },\n  \"skills.txt\": {\n    content:\n      \"**> familiar**: Java, Javascript/React, Python, git, JPA Hibernate\\n\" +\n      \"**= familiar**: C, Objective-C, Android, html/css, bash, JAX-RS\\n\" +\n      \"**< familiar**: AWS EC2, MATLAB\",\n  },\n};\n\nexport function executeCommand(command) {\n  // expected format: cat file\n  const splitCommand = command.split(\" \");\n  const executable = splitCommand[0];\n  const firstArg = splitCommand[1];\n\n  switch (executable) {\n    case \"cat\":\n      return cat(firstArg);\n    case \"help\":\n      return help();\n    default:\n      return commandNotFound;\n  }\n}\n\nfunction help() {\n  const functionHelpMap = {\n    command: {\n      usage: \"usage\",\n      help: \"help\",\n    },\n    ls: {\n      usage: \"ls <filename>\",\n      help: \"Displays files in the folder\",\n    },\n    cat: {\n      usage: \"cat <filename>\",\n      help: \"Displays content of the file\",\n    },\n    clear: {\n      usage: \"clear\",\n      help: \"Clears the console\",\n    },\n    TIP1: {\n      usage: \"./<executable>\",\n      help: \"Executes an executable\",\n    },\n    TIP2: {\n      usage: \"press tab\",\n      help: \"tab autocompletes filename\",\n    },\n  };\n  var helpMessage = \"\";\n\n  const { maxHelpTotalLength, maxKeyLength, maxUsageLength, maxHelpLength } =\n    getMaxLengths(functionHelpMap);\n  const width = window.innerWidth;\n  const horizontalBar =\n    width <= phoneWidth ? \"\\n\" : \"_\".repeat(maxHelpTotalLength + 8) + \"\\n\";\n\n  helpMessage += horizontalBar;\n\n  for (const key in functionHelpMap) {\n    const keyName = appendWhiteSpace(key, maxKeyLength);\n    const keyUsage = appendWhiteSpace(\n      functionHelpMap[key][\"usage\"],\n      maxUsageLength\n    );\n    const keyHelp = appendWhiteSpace(\n      functionHelpMap[key][\"help\"],\n      maxHelpLength\n    );\n    var indivHelp =\n      width <= phoneWidth\n        ? `**${key}** (${functionHelpMap[key][\"usage\"]}): ${functionHelpMap[key][\"help\"]}\\n`\n        : `| ${keyName} | ${keyUsage} | ${keyHelp} | \\n`;\n    helpMessage += indivHelp;\n  }\n  helpMessage += horizontalBar;\n  return helpMessage;\n}\n\n// Fills space until the string reaches total length\nfunction appendWhiteSpace(str, totalLength) {\n  var result = str;\n  while (result.length < totalLength) {\n    result += \" \";\n  }\n  return result;\n}\n\nfunction cat(file) {\n  if (!file) {\n    return commandNotFound;\n  }\n  if (!files[file]) {\n    return (\n      \"Cannot find the file called \" + file + \". Type **ls** to list files.\"\n    );\n  }\n  return files[file][\"content\"];\n}\n\nconst getMaxLengths = (map) => {\n  var maxHelpTotalLength = 0;\n  var maxKeyLength = 0;\n  var maxUsageLength = 0;\n  var maxHelpLength = 0;\n  for (const key in map) {\n    const help = `|${key}|${map[key][\"usage\"]}|${map[key][\"help\"]}|\\n`;\n    maxHelpTotalLength = Math.max(help.length, maxHelpTotalLength);\n\n    maxKeyLength = Math.max(key.length, maxKeyLength);\n    maxUsageLength = Math.max(map[key][\"usage\"].length, maxUsageLength);\n    maxHelpLength = Math.max(map[key][\"help\"].length, maxHelpLength);\n  }\n  return {\n    maxHelpTotalLength,\n    maxKeyLength,\n    maxUsageLength,\n    maxHelpLength,\n  };\n};\n\n// Files common methods\nexport function listAllStaticFiles() {\n  return Object.keys(files);\n}\n","import { executeFile } from \"./files.exec\";\nimport { executeCommand } from \"./files.static\";\nimport { listAllExecFiles } from \"./files.exec\";\nimport { listAllStaticFiles } from \"./files.static\";\n\nexport default function processCommand(command) {\n  if (command.startsWith(\"ls\")) {\n    const boldifiedFiles = listAllExecFiles().map((e) => `**${e}**`);\n\n    const files = [...boldifiedFiles, ...listAllStaticFiles()].sort(\n      (a, b) => a - b\n    );\n    return files.join(\"\\t\");\n  }\n\n  // if executable\n  if (command.startsWith(\"./\")) {\n    return executeFile(command);\n  }\n\n  // check if second argument (filename) is executable,\n  // which is invalid for 'cat filename' etc\n  const secondArg = command.split(\" \")[1];\n  const isExecutable = listAllExecFiles().filter((e) => e === secondArg);\n  if (isExecutable.length !== 0) {\n    return `${command.split(\" \")[1]} is an executable. Run it with ./ prefix`;\n  }\n  return executeCommand(command);\n}\n\nexport function fileArray() {\n  return [...listAllExecFiles(), ...listAllStaticFiles()];\n}\n","// this distinguishes between different message types\n// eg `anonymous@hajinkim >` should be displayed differently to other texts\n// this protocol allows you to easily distinguish those\n\n// format of message is: \"<PROTOCOL><messageSeparator><MESSAGE>\"\nexport const messageSeparator = \"//\"\n\nexport const TYPE_INDEX = 0\nexport const CONTENT_INDEX = 1\n\nexport const terminalPrompt = \"anonymous@hajinkim >\"\n\nexport const TYPE_SYSTEM_TEXT = \"System Returns\"\nexport const TYPE_WITH_PROMPT_TEXT = \"User Inputs\"\n\n\n\n\n\n","import {\n  CONTENT_INDEX,\n  messageSeparator,\n  terminalPrompt,\n  TYPE_INDEX,\n  TYPE_SYSTEM_TEXT,\n  TYPE_WITH_PROMPT_TEXT,\n} from \"../utils/messageprotocol\";\nimport { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nexport const PromptText = styled.span`\n  font-weight: bolder;\n  color: navajowhite;\n  margin-right: 5px;\n`;\n\nexport const useFocus = () => {\n  const inputRef = useRef();\n  const focusInput = () => {\n    inputRef.current.focus();\n  };\n\n  return [inputRef, focusInput];\n};\n\nexport const prettierHistory = (history) => {\n  return history\n    .map((line) => line.split(messageSeparator))\n    .map((array) => {\n      if (array[TYPE_INDEX].includes(TYPE_WITH_PROMPT_TEXT)) {\n        return (\n          <>\n            <PromptText>{terminalPrompt}</PromptText>\n            {array[CONTENT_INDEX]}\n          </>\n        );\n      }\n      if (array[TYPE_INDEX].includes(TYPE_SYSTEM_TEXT)) {\n        return processBold(array[CONTENT_INDEX]);\n      }\n\n      return <></>;\n    });\n};\n\nconst Bold = styled.b`\n  background: ;\n  color: white;\n`;\n\nconst processBold = (text) => {\n  var words = [];\n  const splitText = text.split(\"**\");\n\n  for (var i = 0; i < splitText.length; i++) {\n    if (i % 2 !== 0) {\n      words.push(<Bold>{splitText[i]}</Bold>);\n    } else {\n      words.push(splitText[i]);\n    }\n  }\n\n  return words;\n};\n","import styled from \"styled-components\";\nimport { terminalFontSize, phoneWidth } from \"../../utils/constants\";\nimport { useState, useEffect } from \"react\";\nimport { fileArray } from \"../../utils/terminalfilesystem/filesystem\";\nimport {\n  terminalPrompt,\n  messageSeparator,\n  TYPE_WITH_PROMPT_TEXT,\n  TYPE_SYSTEM_TEXT,\n} from \"../../utils/messageprotocol\";\nimport { prettierHistory, useFocus, PromptText } from \"../../hooks/useFocus\";\nimport processCommand from \"../../utils/terminalfilesystem/filesystem\";\nconst WindowContent = styled.div`\n  height: 100%;\n  background: grey;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  padding: 10px;\n  color: whitesmoke;\n  contenteditable: true;\n  font-size: ${terminalFontSize}px;\n  white-space: pre-wrap;\n  overflow-y: scroll;\n  @media (max-width: ${phoneWidth}px) {\n    font-size: ${terminalFontSize * 0.4}px;\n    line-height: 1.5em;\n  }\n`;\nexport default function TerminalMainScreen() {\n  const [history, setHistory] = useState([]);\n  const [ref, setFocus] = useFocus();\n\n  useEffect(() => {\n    setFocus();\n    // eslint-disable-next-line\n  }, [history]);\n\n  const handleKey = (e) => {\n    if (e.key === \"Enter\") {\n      const command = ref.current.textContent;\n      const submittedLine = `${TYPE_WITH_PROMPT_TEXT}${messageSeparator}${command}\\n`;\n      const systemReturns = `${TYPE_SYSTEM_TEXT}${messageSeparator}${processCommand(\n        command\n      )}\\n`;\n\n      if (command.includes(\"clear\")) {\n        setHistory([]);\n        return;\n      }\n\n      // empty content\n      ref.current.textContent = \"\";\n\n      const newHistory = [...history, submittedLine, systemReturns];\n      // prevent newline from forming\n      e.preventDefault();\n      setHistory(newHistory);\n      setFocus();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      const splitCommand = ref.current.textContent.split(\" \");\n      var lastArg = splitCommand[splitCommand.length - 1];\n      // check if command is prefixed with ./\n      const isExecPrefixed = lastArg.startsWith(\"./\");\n      if (isExecPrefixed) {\n        lastArg = lastArg.split(\"./\")[1];\n      }\n\n      const fileMatch = fileArray().filter((f) => f.startsWith(lastArg));\n\n      if (fileMatch) {\n        if (fileMatch[0]) {\n          splitCommand[splitCommand.length - 1] = fileMatch[0];\n          ref.current.textContent = isExecPrefixed\n            ? [\"./\", fileMatch[0]].join(\"\")\n            : splitCommand.join(\" \");\n        }\n      }\n    }\n  };\n\n  const TerminalInput = styled.span``;\n\n  const handleTerminalClick = () => {\n    setFocus();\n  };\n\n  return (\n    <WindowContent onClick={handleTerminalClick}>\n      {\"Type `help` to display possible commands\\n\"}\n      {prettierHistory(history)}\n      <PromptText>{terminalPrompt}</PromptText>\n      <TerminalInput\n        ref={ref}\n        onKeyDown={handleKey}\n        contentEditable={true}\n      ></TerminalInput>\n    </WindowContent>\n  );\n}\n","import styled from \"styled-components\";\nimport TerminalStatusBar from \"./TerminalStatusBar\";\nimport TerminalMainScreen from \"./TerminalMainScreen\";\nimport { phoneWidth } from \"../../utils/constants\";\nconst Window = styled.div`\n  width: 800px;\n  height: 600px;\n  border-radius: 15px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: ${phoneWidth}px) {\n    height: 200px;\n  }\n`;\nexport default function Terminal() {\n  return (\n    <>\n      <Window>\n        <TerminalStatusBar />\n        <TerminalMainScreen />\n      </Window>\n    </>\n  );\n}\n","import \"./App.css\";\nimport styled from \"styled-components\";\nimport BottomInfo from \"./components/bottominfo/BottomInfo\";\nimport Terminal from \"./components/terminal/Terminal\";\nconst Background = styled.div`\n  background-color: yellowgreen;\n  height: 100vh;\n`;\nconst Centered = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport default function App() {\n  return (\n    <>\n      <Background>\n        <Centered>\n          <Terminal />\n        </Centered>\n        <BottomInfo />\n      </Background>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<App/>, document.getElementById('root')\n);"],"sourceRoot":""}